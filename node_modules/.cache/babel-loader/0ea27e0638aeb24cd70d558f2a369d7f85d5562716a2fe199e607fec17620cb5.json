{"ast":null,"code":"var _jsxFileName = \"/home/praveent/Documents/tripfriday-praveen/src/Components/Post.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Comments from './Comments';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const addPost = comment => {\n    setComments([...comments, comment]);\n  };\n  const handlDelete = comment => {\n    let cloned = [...comments];\n    let index = cloned.findIndex(c => c === comment);\n    if (index !== -1) {\n      cloned.splice(index, 1);\n      setComments(cloned);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", props.post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", props.post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), comments.length > 0 ? comments.map(com => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            handlDelete(com);\n          },\n          children: com\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 58\n        }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Comments, {\n          addPost: addPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"btD9vnBmneqcEiSDt1kqMB5BF1k=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Comments","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","props","_s","comments","setComments","addPost","comment","handlDelete","cloned","index","findIndex","c","splice","children","elevation","post","title","fileName","_jsxFileName","lineNumber","columnNumber","body","length","map","com","onClick","_c","$RefreshReg$"],"sources":["/home/praveent/Documents/tripfriday-praveen/src/Components/Post.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Comments from './Comments'\nimport Paper from '@mui/material/Paper';\n\n\nexport default function Post(props) {\n  const [comments,setComments] = useState([])\n\n  const addPost = (comment) => {\n    setComments([...comments,comment])\n  }\n\n  const handlDelete = (comment) => {\n  let cloned = [...comments] \n  let index = cloned.findIndex((c) => c === comment)\n  if(index !== -1){\n    cloned.splice(index,1)\n     setComments(cloned)\n  }\n  }\n\n  return (\n    <div>\n            <>\n            <Paper elevation={3}  >\n            <h3> {props.post.title}</h3>\n              <p> {props.post.body}</p>\n            \n              {comments.length>0 ? comments.map((com) => <div onClick={()=>{handlDelete(com)}}>{com}</div>) :<></>}\n              <Comments addPost={addPost} />   \n              </Paper>    \n            </>    \n      </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMY,OAAO,GAAIC,OAAO,IAAK;IAC3BF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAACG,OAAO,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAID,OAAO,IAAK;IACjC,IAAIE,MAAM,GAAG,CAAC,GAAGL,QAAQ,CAAC;IAC1B,IAAIM,KAAK,GAAGD,MAAM,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAKL,OAAO,CAAC;IAClD,IAAGG,KAAK,KAAK,CAAC,CAAC,EAAC;MACdD,MAAM,CAACI,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;MACrBL,WAAW,CAACI,MAAM,CAAC;IACtB;EACA,CAAC;EAED,oBACEX,OAAA;IAAAgB,QAAA,eACQhB,OAAA,CAAAE,SAAA;MAAAc,QAAA,eACAhB,OAAA,CAACF,KAAK;QAACmB,SAAS,EAAE,CAAE;QAAAD,QAAA,gBACpBhB,OAAA;UAAAgB,QAAA,GAAI,GAAC,EAACZ,KAAK,CAACc,IAAI,CAACC,KAAK;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BvB,OAAA;UAAAgB,QAAA,GAAG,GAAC,EAACZ,KAAK,CAACc,IAAI,CAACM,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAExBjB,QAAQ,CAACmB,MAAM,GAAC,CAAC,GAAGnB,QAAQ,CAACoB,GAAG,CAAEC,GAAG,iBAAK3B,OAAA;UAAK4B,OAAO,EAAEA,CAAA,KAAI;YAAClB,WAAW,CAACiB,GAAG,CAAC;UAAA,CAAE;UAAAX,QAAA,EAAEW;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,CAAC,gBAAEvB,OAAA,CAAAE,SAAA,mBAAI,CAAC,eACpGF,OAAA,CAACH,QAAQ;UAACW,OAAO,EAAEA;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC,gBACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAAClB,EAAA,CA7BuBF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}